import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import pandas as pd
# Load dataset
data = load_breast_cancer()
X = data.data
y = data.target # 0 = Malignant (Cancerous), 1 = Benign (Non-Cancerous)
# Convert to DataFrame
df = pd.DataFrame(X, columns=data.feature_names)
# Add target column
df['target'] = data.target
# Print the DataFrame
print(df.head()) # Print first 5 row
# Standardize features
X_scaled = StandardScaler().fit_transform(X)
# Apply K-Means Clustering
kmeans = KMeans(n_clusters=2, random_state=42, n_init=10)
clusters = kmeans.fit_predict(X_scaled)
# Map clusters to actual labels
if np.mean(y[clusters == 0]) > np.mean(y[clusters == 1]):
clusters = np.where(clusters == 0, "Benign", "Malignant")
else:
clusters = np.where(clusters == 0, "Malignant", "Benign")
# Reduce dimensions for visualization
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)
# Plot results
plt.figure(figsize=(10, 5))
# Predicted Clusters
plt.subplot(1, 2, 1)
sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=clusters, palette={"Malignant":
"red", "Benign": "blue"})
plt.title("K-Means Clustering")
plt.xlabel("PCA Component 1")
plt.ylabel("PCA Component 2")
plt.tight_layout()
plt.show()
